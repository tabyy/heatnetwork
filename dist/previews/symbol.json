{
  "renderHTML": "__ht__function(data, gv, cache) {\n\n\noption = {\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n            type: 'shadow',\n            label: {\n                backgroundColor: '#283b56'\n            }\n        }\n    },\n    legend: {\n        data:['日供热量', '室外平均温度']\n    },\n    toolbox: {\n        show: true,\n        feature: {\n            // dataView: {readOnly: false},\n            // restore: {},\n            saveAsImage: {}\n        }\n    },\n    dataZoom: {\n        show: false,\n        start: 0,\n        end: 100\n    },\n    xAxis: [\n        {\n            type: 'category',\n            boundaryGap: true,\n            data: (function (){\n                var now = new Date();\n                var res = [];\n                var len = 10;\n                while (len--) {\n                    res.unshift(now.toLocaleTimeString().replace(/^\\D*/,''));\n                    now = new Date(now - 2000 );\n                }\n                return res;\n            })()\n        },\n        {\n            type: 'category',\n            boundaryGap: true,\n            data: (function (){\n                var res = [];\n                var len = 10;\n                while (len--) {\n                    res.push(10 - len - 1);\n                }\n                return res;\n            })()\n        }\n    ],\n    yAxis: [\n        {\n            type: 'value',\n            scale: true,\n            name: '温度',\n            max: 30,\n            min: -30,\n            boundaryGap: [0.2, 0.2]\n        },\n        {\n            type: 'value',\n            scale: true,\n            name: '热量',\n            max: 1200,\n            min: 0,\n            boundaryGap: [0.2, 0.2]\n        }\n    ],\n    series: [\n        {\n            name:'日供热量',\n            type:'bar',\n            color: 'rgba(27,85,245,0.6)',\n            xAxisIndex: 1,\n            yAxisIndex: 1,\n            data:(function (){\n                var res = [];\n                var len = 10;\n                while (len--) {\n                    res.push(Math.round(Math.random() * 1000));\n                }\n                return res;\n            })()\n        },\n        {\n            name:'室外平均温度',\n            type:'line',\n            color: 'rgb(224,118,25)',\n            data:(function (){\n                var res = [];\n                var len = 0;\n                while (len < 10) {\n                    res.push((Math.random()*20 -0 ).toFixed(1) - 10);\n                    len++;\n                }\n                return res;\n            })()\n        }\n    ]\n};\n\nlet count = 11;\n\nsetInterval(function (){\n    axisData = (new Date()).toLocaleTimeString().replace(/^\\D*/,'');\n\n    var data0 = option.series[0].data;\n    var data1 = option.series[1].data;\n    data0.shift();\n    data0.push(Math.round(Math.random() * 1000));\n    data1.shift();\n    data1.push((Math.random() * 20 + 0).toFixed(1) - 10);\n\n    option.xAxis[0].data.shift();\n    option.xAxis[0].data.push(axisData);\n    option.xAxis[1].data.shift();\n    option.xAxis[1].data.push(count++);\n\n    myChart.setOption(option);\n}, 2100);\n\n\n\n\n\n\n\n\n\n    if (!cache.htmlView) {\n        cache.dom= document.createElement('div');\n        let myChart = cache.echart = echarts.init(cache.dom);\n\n        // layoutHTML will be called when the data needs to be drawing\n        cache.dom.layoutHTML = function () {\n            gv.layoutHTML(data, cache.dom, true);\n            cache.echart.resize();\n        };\n    }\n\n    // update data\n    //option.title.text = data.a('myname');\n    cache.echart.setOption(option);\n\n    // html for showing\n    return cache.dom;\n}",
  "width": 100,
  "height": 100,
  "comps": [],
  "title": "日供热量和室外平均温度对比"
}